"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/Loaders/GoogleCSVUploader.tsx":
/*!**************************************************!*\
  !*** ./components/Loaders/GoogleCSVUploader.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GoogleCSVUploader: function() { return /* binding */ GoogleCSVUploader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Components_AccountFilesSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Components/AccountFilesSelector */ \"(app-pages-browser)/./components/Components/AccountFilesSelector.tsx\");\n/* harmony import */ var _Data_Bank__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Data/Bank */ \"(app-pages-browser)/./components/Data/Bank.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction GoogleCSVUploader(param) {\n    let { documentType, handleFiles } = param;\n    _s();\n    const [listedFiles, setListedFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const getAccountFolderId = async ()=>{\n        let response;\n        try {\n            //@ts-ignore\n            response = await gapi.client.drive.files.list({\n                \"pageSize\": 2,\n                \"corpora\": \"user\",\n                \"includeItemsFromAllDrives\": true,\n                \"supportsAllDrives\": true,\n                \"orderBy\": \"name\",\n                \"q\": \"name='Comptes' and mimeType = 'application/vnd.google-apps.folder'\",\n                \"fields\": \"files(id, name)\"\n            });\n        } catch (err) {\n            console.error(err);\n            return \"\";\n        }\n        const files = response.result.files;\n        if (!files || files.length == 0) {\n            console.warn(\"No files found\");\n            return \"\";\n        }\n        if (files.length > 1) {\n            console.warn(\"Too many folders found\");\n            return \"\";\n        }\n        return files[0].id;\n    };\n    const listFilesInFolder = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (folderId)=>{\n        let response;\n        try {\n            //@ts-ignore\n            response = await gapi.client.drive.files.list({\n                \"pageSize\": 10,\n                \"corpora\": \"user\",\n                \"includeItemsFromAllDrives\": true,\n                \"supportsAllDrives\": true,\n                \"orderBy\": \"name\",\n                \"q\": documentType === _Data_Bank__WEBPACK_IMPORTED_MODULE_3__.EDocumentType.MAPPING ? \"'\" + folderId + \"' in parents and mimeType='text/csv' and name contains 'mapping'\" : \"'\" + folderId + \"' in parents and mimeType='text/csv' and not name contains 'mapping'\",\n                \"fields\": \"files(id, name)\"\n            });\n        } catch (err) {\n            console.error(err);\n            return;\n        }\n        const files = response.result.files;\n        if (!files || files.length == 0) {\n            console.warn(\"No files found\");\n            return;\n        }\n        setListedFiles(files);\n    }, [\n        searchMapping\n    ]);\n    const getCSVFileContent = async (file)=>{\n        console.log(\"Get content for id \" + file.id + \", name: \" + file.name);\n        let response;\n        try {\n            //@ts-ignore\n            response = await gapi.client.drive.files.get({\n                \"fileId\": file.id,\n                supportAllDrives: true,\n                \"alt\": \"media\"\n            });\n        } catch (err) {\n            console.error(err);\n            return;\n        }\n        console.log(JSON.stringify(response.body));\n        const content = response.body;\n        const blob = new Blob([\n            content\n        ]);\n        const f = new File([\n            blob\n        ], file.name);\n        return f;\n    };\n    const handleSelection = async (selectedFiles)=>{\n        const files = [];\n        console.log(\"Handle Selection: \" + JSON.stringify(selectedFiles));\n        for(let i = 0; i < selectedFiles.length; i++){\n            console.log(\"Get: \" + JSON.stringify(selectedFiles[i]));\n            const file = await getCSVFileContent(selectedFiles[i]);\n            if (file) {\n                files.push(file);\n            }\n        }\n        console.log(\"All files have been loaded\");\n        handleFiles(files, searchMapping);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        getAccountFolderId().then((folderId)=>{\n            listFilesInFolder(folderId);\n        });\n    }, [\n        listFilesInFolder\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Components_AccountFilesSelector__WEBPACK_IMPORTED_MODULE_2__.AccountFilesSelector, {\n        formId: searchMapping ? \"load-mapping\" : \"load-account\",\n        files: listedFiles,\n        handleSelection: handleSelection\n    }, void 0, false, {\n        fileName: \"D:\\\\projet\\\\budget-tracker-nextjs\\\\components\\\\Loaders\\\\GoogleCSVUploader.tsx\",\n        lineNumber: 120,\n        columnNumber: 9\n    }, this);\n}\n_s(GoogleCSVUploader, \"mnmbT3ePJ8cv0b7YbdC8GiFoLeg=\");\n_c = GoogleCSVUploader;\nvar _c;\n$RefreshReg$(_c, \"GoogleCSVUploader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Loaders/GoogleCSVUploader.tsx\n"));

/***/ })

});