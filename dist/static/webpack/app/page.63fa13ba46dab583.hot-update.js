"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/Loaders/CSVBankExtractLoader.tsx":
/*!*****************************************************!*\
  !*** ./components/Loaders/CSVBankExtractLoader.tsx ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSVBankExtractLoader: function() { return /* binding */ CSVBankExtractLoader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Data_UtilMath__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Data/UtilMath */ \"(app-pages-browser)/./components/Data/UtilMath.ts\");\n\nvar _s = $RefreshSig$();\n\n\nconst csvFileToArray = (filename, csv)=>{\n    const lineSeperator1 = \"\\r\\n\";\n    const lineSeperator2 = \"\\n\";\n    let lineSeperator = lineSeperator1;\n    const fieldSeparator = \";\";\n    const headers = [\n        \"Date\",\n        \"D\\xe9bit\",\n        \"Cr\\xe9dit\",\n        \"Libell\\xe9\",\n        \"Solde\",\n        \"Tags\"\n    ];\n    let rows = csv.split(lineSeperator1);\n    if (rows.length === 1) {\n        rows = csv.split(lineSeperator2);\n        lineSeperator = lineSeperator2;\n    }\n    // Determine headers order\n    let re = /\"/gi;\n    let csvHeader = rows[0].split(fieldSeparator).map((header)=>header.toLowerCase().replace(re, \"\"));\n    const headersIdx = headers.map((header)=>csvHeader.indexOf(header.toLowerCase()));\n    // Ignore first header\n    let csvRows = rows[1].split(lineSeperator).filter((row)=>row !== \"\");\n    // Ignore first header\n    csvRows = rows.slice(1).filter((row)=>row !== \"\");\n    const lines = csvRows.map((row)=>{\n        const values = row.split(fieldSeparator).map((field)=>field.replace(/['\"]+/g, \"\"));\n        // Expecting dd/mm/yyyy\n        const dateElements = values[headersIdx[0]].split(\"/\").map((elem)=>Number.parseFloat(elem));\n        const date = new Date(dateElements[2], dateElements[1] - 1, dateElements[0]);\n        const maxDaysOfMonth = new Date(dateElements[2], dateElements[1], 0).getDate();\n        const pctInMonth = Math.round(_Data_UtilMath__WEBPACK_IMPORTED_MODULE_2__.UtilMath.map(dateElements[0], 1, maxDaysOfMonth, 1, 100));\n        const dataRow = {\n            date: date,\n            pctInMonth: pctInMonth,\n            debit: values[headersIdx[1]] ? Number.parseFloat(values[headersIdx[1]].replace(\",\", \".\")) * -1 : undefined,\n            credit: values[headersIdx[2]] ? Number.parseFloat(values[headersIdx[2]].replace(\",\", \".\")) : undefined,\n            label: values[headersIdx[3]],\n            balance: Number.parseFloat(values[headersIdx[4]].replace(\",\", \".\")),\n            tags: values[headersIdx[5]] === \"\" ? [] : values[headersIdx[5]].split(\">\")\n        };\n        return dataRow;\n    });\n    const data = {\n        begin: new Date(lines[0].date.getFullYear(), lines[0].date.getMonth(), 1),\n        end: new Date(lines[0].date.getFullYear(), lines[0].date.getMonth() + 1, 0),\n        lines: lines,\n        isAggregated: false\n    };\n    return data;\n};\nfunction CSVBankExtractLoader(param) {\n    let { files, onValuesChange } = param;\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (files.length > 0) {\n            setData([]);\n            for(let i = 0; i < files.length; i++){\n                const file = files[i];\n                const fileReader = new FileReader();\n                fileReader.onload = function(event) {\n                    let content = \"\";\n                    if (event.target !== null) {\n                        content = event.target.result || \"\";\n                    }\n                    const data = csvFileToArray(file.name, content);\n                    setData((prev)=>{\n                        if (prev.findIndex((val)=>val.begin.toLocaleDateString() === data.begin.toLocaleDateString() && val.end.toLocaleDateString() === data.end.toLocaleDateString()) === -1) {\n                            return [\n                                ...prev,\n                                data\n                            ].sort((a, b)=>a.end > b.end ? 1 : -1);\n                        } else {\n                            return [\n                                ...prev\n                            ];\n                        }\n                    });\n                };\n                fileReader.readAsText(file);\n            }\n        }\n    }, [\n        files\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        onValuesChange(data);\n    }, [\n        data,\n        onValuesChange\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false);\n}\n_s(CSVBankExtractLoader, \"MNW7rnkI9oNPb711ySWHHHkbM9Y=\");\n_c = CSVBankExtractLoader;\nvar _c;\n$RefreshReg$(_c, \"CSVBankExtractLoader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Loaders/CSVBankExtractLoader.tsx\n"));

/***/ })

});