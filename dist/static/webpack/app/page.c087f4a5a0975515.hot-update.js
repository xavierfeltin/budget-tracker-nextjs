"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/Loaders/CSVBudgetExtractLoader.tsx":
/*!*******************************************************!*\
  !*** ./components/Loaders/CSVBudgetExtractLoader.tsx ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSVBudgetExtractLoader: function() { return /* binding */ CSVBudgetExtractLoader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction CSVBudgetExtractLoader(param) {\n    let { files, onValuesChange } = param;\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const loadBudgets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((files)=>{\n        setData({});\n        for(let i = 0; i < files.length; i++){\n            const file = files[i];\n            const fileReader = new FileReader();\n            fileReader.onload = function(event) {\n                let content = \"\";\n                if (event.target !== null) {\n                    content = event.target.result || \"\";\n                }\n                csvFileToArray(file.name, content);\n            };\n            fileReader.readAsText(file);\n        }\n    }, []);\n    const csvFileToArray = (filename, csv)=>{\n        const lineSeperator = \"\\n\";\n        const fieldSeparator = \";\";\n        const headers = [\n            \"Tag\",\n            \"Amount\"\n        ];\n        let rows = csv.split(lineSeperator);\n        // Determine headers order\n        let re = /\"/gi;\n        let csvHeader = rows[0].split(fieldSeparator).map((header)=>header.toLowerCase().replace(re, \"\"));\n        const headersIdx = headers.map((header)=>csvHeader.indexOf(header.toLowerCase()));\n        // Ignore first header\n        let csvRows = rows[1].split(lineSeperator).filter((row)=>row !== \"\");\n        // Ignore first header\n        csvRows = rows.slice(1).filter((row)=>row !== \"\");\n        const lines = csvRows.map((row)=>{\n            const values = row.split(fieldSeparator).map((field)=>field.replace(/['\"]+/g, \"\"));\n            const dataRow = {\n                tag: values[headersIdx[0]],\n                amount: parseFloat(values[headersIdx[1]])\n            };\n            return dataRow;\n        });\n        const data = {};\n        for(let i = 0; i < lines.length; i++){\n            data[lines[i].tag] = lines[i].amount;\n        }\n        setData(data);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (files.length > 0) {\n            console.log(\"load csv files: \" + files);\n            loadBudgets(files);\n        }\n    }, [\n        files,\n        loadBudgets\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        onValuesChange(data);\n    }, [\n        data,\n        onValuesChange\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false);\n}\n_s(CSVBudgetExtractLoader, \"E/L7dXjj/RgLQrQymjm7ndw7jkc=\");\n_c = CSVBudgetExtractLoader;\nvar _c;\n$RefreshReg$(_c, \"CSVBudgetExtractLoader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvTG9hZGVycy9DU1ZCdWRnZXRFeHRyYWN0TG9hZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUQ7QUFRbEQsU0FBU0csdUJBQXVCLEtBRUY7UUFGRSxFQUNuQ0MsS0FBSyxFQUNMQyxjQUFjLEVBQW1CLEdBRkU7O0lBSW5DLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHTCwrQ0FBUUEsQ0FBVSxDQUFDO0lBRTNDLE1BQU1NLGNBQWNSLGtEQUFXQSxDQUFDLENBQUNJO1FBQzdCRyxRQUFRLENBQUM7UUFFVCxJQUFLLElBQUlFLElBQUksR0FBR0EsSUFBSUwsTUFBTU0sTUFBTSxFQUFFRCxJQUFLO1lBQ25DLE1BQU1FLE9BQU9QLEtBQUssQ0FBQ0ssRUFBRTtZQUNyQixNQUFNRyxhQUFhLElBQUlDO1lBQ3ZCRCxXQUFXRSxNQUFNLEdBQUcsU0FBVUMsS0FBZ0M7Z0JBQzFELElBQUlDLFVBQWtCO2dCQUN0QixJQUFJRCxNQUFNRSxNQUFNLEtBQUssTUFBTTtvQkFDdkJELFVBQVVELE1BQU1FLE1BQU0sQ0FBQ0MsTUFBTSxJQUFjO2dCQUMvQztnQkFDQUMsZUFBZVIsS0FBS1MsSUFBSSxFQUFFSjtZQUM5QjtZQUNBSixXQUFXUyxVQUFVLENBQUNWO1FBQzFCO0lBQ0osR0FBRyxFQUFFO0lBRUwsTUFBTVEsaUJBQWlCLENBQUNHLFVBQWtCQztRQUN0QyxNQUFNQyxnQkFBZ0I7UUFDdEIsTUFBTUMsaUJBQWlCO1FBQ3ZCLE1BQU1DLFVBQVU7WUFBQztZQUFNO1NBQVM7UUFDaEMsSUFBSUMsT0FBT0osSUFBSUssS0FBSyxDQUFDSjtRQUVyQiwwQkFBMEI7UUFDMUIsSUFBSUssS0FBSztRQUNULElBQUlDLFlBQVlILElBQUksQ0FBQyxFQUFFLENBQUNDLEtBQUssQ0FBQ0gsZ0JBQWdCTSxHQUFHLENBQUMsQ0FBQ0MsU0FBV0EsT0FBT0MsV0FBVyxHQUFHQyxPQUFPLENBQUNMLElBQUk7UUFDL0YsTUFBTU0sYUFBYVQsUUFBUUssR0FBRyxDQUFDLENBQUNDLFNBQVdGLFVBQVVNLE9BQU8sQ0FBQ0osT0FBT0MsV0FBVztRQUUvRSxzQkFBc0I7UUFDdEIsSUFBSUksVUFBVVYsSUFBSSxDQUFDLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDSixlQUFlYyxNQUFNLENBQUMsQ0FBQ0MsTUFBZ0JBLFFBQVE7UUFFM0Usc0JBQXNCO1FBQ3RCRixVQUFVVixLQUFLYSxLQUFLLENBQUMsR0FBR0YsTUFBTSxDQUFDLENBQUNDLE1BQWdCQSxRQUFRO1FBQ3hELE1BQU1FLFFBQXVCSixRQUFRTixHQUFHLENBQUNRLENBQUFBO1lBQ3JDLE1BQU1HLFNBQVNILElBQUlYLEtBQUssQ0FBQ0gsZ0JBQWdCTSxHQUFHLENBQUMsQ0FBQ1ksUUFBVUEsTUFBTVQsT0FBTyxDQUFDLFVBQVU7WUFFaEYsTUFBTVUsVUFBdUI7Z0JBQ3pCQyxLQUFLSCxNQUFNLENBQUNQLFVBQVUsQ0FBQyxFQUFFLENBQUM7Z0JBQzFCVyxRQUFRQyxXQUFXTCxNQUFNLENBQUNQLFVBQVUsQ0FBQyxFQUFFLENBQUM7WUFDNUM7WUFFQSxPQUFPUztRQUNYO1FBRUEsTUFBTXRDLE9BQWdCLENBQUM7UUFDdkIsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUlnQyxNQUFNL0IsTUFBTSxFQUFFRCxJQUFLO1lBQ25DSCxJQUFJLENBQUNtQyxLQUFLLENBQUNoQyxFQUFFLENBQUNvQyxHQUFHLENBQUMsR0FBR0osS0FBSyxDQUFDaEMsRUFBRSxDQUFDcUMsTUFBTTtRQUN4QztRQUVBdkMsUUFBUUQ7SUFDWjtJQUVBTCxnREFBU0EsQ0FBQztRQUNOLElBQUlHLE1BQU1NLE1BQU0sR0FBRyxHQUNuQjtZQUNJc0MsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQjdDO1lBQ2pDSSxZQUFZSjtRQUNoQjtJQUNKLEdBQUc7UUFBQ0E7UUFBT0k7S0FBWTtJQUV2QlAsZ0RBQVNBLENBQUM7UUFDTkksZUFBZUM7SUFDbkIsR0FBRztRQUFDQTtRQUFNRDtLQUFlO0lBRXpCLHFCQUNJO0FBRVI7R0F6RWdCRjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0xvYWRlcnMvQ1NWQnVkZ2V0RXh0cmFjdExvYWRlci50c3g/YWQyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBJQnVkZ2V0TGluZSwgVEJ1ZGdldCB9IGZyb20gXCIuLi9EYXRhL0JhbmtcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5wdXRSYW5nZVByb3BzIHtcclxuICAgIGZpbGVzOiBGaWxlW107XHJcbiAgICBvblZhbHVlc0NoYW5nZTogKGxvYWRlZERhdGE6IFRCdWRnZXQpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBDU1ZCdWRnZXRFeHRyYWN0TG9hZGVyKHtcclxuICAgIGZpbGVzLFxyXG4gICAgb25WYWx1ZXNDaGFuZ2V9IDogSW5wdXRSYW5nZVByb3BzKSB7XHJcblxyXG4gICAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGU8VEJ1ZGdldD4oe30pO1xyXG5cclxuICAgIGNvbnN0IGxvYWRCdWRnZXRzID0gdXNlQ2FsbGJhY2soKGZpbGVzOiBGaWxlW10pID0+IHtcclxuICAgICAgICBzZXREYXRhKHt9KTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBmaWxlID0gZmlsZXNbaV07XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudDogUHJvZ3Jlc3NFdmVudDxGaWxlUmVhZGVyPikge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNvbnRlbnQ6IHN0cmluZyA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IGV2ZW50LnRhcmdldC5yZXN1bHQgYXMgc3RyaW5nIHx8IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjc3ZGaWxlVG9BcnJheShmaWxlLm5hbWUsIGNvbnRlbnQpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIGNvbnN0IGNzdkZpbGVUb0FycmF5ID0gKGZpbGVuYW1lOiBzdHJpbmcsIGNzdjogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgY29uc3QgbGluZVNlcGVyYXRvciA9IFwiXFxuXCI7XHJcbiAgICAgICAgY29uc3QgZmllbGRTZXBhcmF0b3IgPSBcIjtcIjtcclxuICAgICAgICBjb25zdCBoZWFkZXJzID0gW1wiVGFnXCIsXCJBbW91bnRcIl07XHJcbiAgICAgICAgbGV0IHJvd3MgPSBjc3Yuc3BsaXQobGluZVNlcGVyYXRvcik7XHJcblxyXG4gICAgICAgIC8vIERldGVybWluZSBoZWFkZXJzIG9yZGVyXHJcbiAgICAgICAgbGV0IHJlID0gL1wiL2dpO1xyXG4gICAgICAgIGxldCBjc3ZIZWFkZXIgPSByb3dzWzBdLnNwbGl0KGZpZWxkU2VwYXJhdG9yKS5tYXAoKGhlYWRlcikgPT4gaGVhZGVyLnRvTG93ZXJDYXNlKCkucmVwbGFjZShyZSwgXCJcIikpO1xyXG4gICAgICAgIGNvbnN0IGhlYWRlcnNJZHggPSBoZWFkZXJzLm1hcCgoaGVhZGVyKSA9PiBjc3ZIZWFkZXIuaW5kZXhPZihoZWFkZXIudG9Mb3dlckNhc2UoKSkpO1xyXG5cclxuICAgICAgICAvLyBJZ25vcmUgZmlyc3QgaGVhZGVyXHJcbiAgICAgICAgbGV0IGNzdlJvd3MgPSByb3dzWzFdLnNwbGl0KGxpbmVTZXBlcmF0b3IpLmZpbHRlcigocm93OiBzdHJpbmcpID0+IHJvdyAhPT0gXCJcIik7XHJcblxyXG4gICAgICAgIC8vIElnbm9yZSBmaXJzdCBoZWFkZXJcclxuICAgICAgICBjc3ZSb3dzID0gcm93cy5zbGljZSgxKS5maWx0ZXIoKHJvdzogc3RyaW5nKSA9PiByb3cgIT09IFwiXCIpO1xyXG4gICAgICAgIGNvbnN0IGxpbmVzOiBJQnVkZ2V0TGluZVtdID0gY3N2Um93cy5tYXAocm93ID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gcm93LnNwbGl0KGZpZWxkU2VwYXJhdG9yKS5tYXAoKGZpZWxkKSA9PiBmaWVsZC5yZXBsYWNlKC9bJ1wiXSsvZywgJycpKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGFSb3c6IElCdWRnZXRMaW5lID0ge1xyXG4gICAgICAgICAgICAgICAgdGFnOiB2YWx1ZXNbaGVhZGVyc0lkeFswXV0sXHJcbiAgICAgICAgICAgICAgICBhbW91bnQ6IHBhcnNlRmxvYXQodmFsdWVzW2hlYWRlcnNJZHhbMV1dKVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGRhdGFSb3c7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgY29uc3QgZGF0YTogVEJ1ZGdldCA9IHt9O1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZGF0YVtsaW5lc1tpXS50YWddID0gbGluZXNbaV0uYW1vdW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2V0RGF0YShkYXRhKTtcclxuICAgIH07XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibG9hZCBjc3YgZmlsZXM6IFwiICsgZmlsZXMpO1xyXG4gICAgICAgICAgICBsb2FkQnVkZ2V0cyhmaWxlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW2ZpbGVzLCBsb2FkQnVkZ2V0c10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgb25WYWx1ZXNDaGFuZ2UoZGF0YSk7XHJcbiAgICB9LCBbZGF0YSwgb25WYWx1ZXNDaGFuZ2VdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+PC8+XHJcbiAgICApXHJcbn0iXSwibmFtZXMiOlsidXNlQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIkNTVkJ1ZGdldEV4dHJhY3RMb2FkZXIiLCJmaWxlcyIsIm9uVmFsdWVzQ2hhbmdlIiwiZGF0YSIsInNldERhdGEiLCJsb2FkQnVkZ2V0cyIsImkiLCJsZW5ndGgiLCJmaWxlIiwiZmlsZVJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJldmVudCIsImNvbnRlbnQiLCJ0YXJnZXQiLCJyZXN1bHQiLCJjc3ZGaWxlVG9BcnJheSIsIm5hbWUiLCJyZWFkQXNUZXh0IiwiZmlsZW5hbWUiLCJjc3YiLCJsaW5lU2VwZXJhdG9yIiwiZmllbGRTZXBhcmF0b3IiLCJoZWFkZXJzIiwicm93cyIsInNwbGl0IiwicmUiLCJjc3ZIZWFkZXIiLCJtYXAiLCJoZWFkZXIiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJoZWFkZXJzSWR4IiwiaW5kZXhPZiIsImNzdlJvd3MiLCJmaWx0ZXIiLCJyb3ciLCJzbGljZSIsImxpbmVzIiwidmFsdWVzIiwiZmllbGQiLCJkYXRhUm93IiwidGFnIiwiYW1vdW50IiwicGFyc2VGbG9hdCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Loaders/CSVBudgetExtractLoader.tsx\n"));

/***/ })

});