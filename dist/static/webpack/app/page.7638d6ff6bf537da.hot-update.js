"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/Charts/TagMonthlyHistoryChart.tsx":
/*!******************************************************!*\
  !*** ./components/Charts/TagMonthlyHistoryChart.tsx ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TagHistoryMonthlyChart: function() { return /* binding */ TagHistoryMonthlyChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-chartjs-2 */ \"(app-pages-browser)/./node_modules/react-chartjs-2/dist/index.js\");\n/* harmony import */ var _ColorBank__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ColorBank */ \"(app-pages-browser)/./components/Charts/ColorBank.ts\");\n/* harmony import */ var _Data_Bank__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Data/Bank */ \"(app-pages-browser)/./components/Data/Bank.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_4__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_4__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_4__.PointElement, chart_js__WEBPACK_IMPORTED_MODULE_4__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_4__.CategoryScale, chart_js__WEBPACK_IMPORTED_MODULE_4__.BarElement, chart_js__WEBPACK_IMPORTED_MODULE_4__.Title, chart_js__WEBPACK_IMPORTED_MODULE_4__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_4__.Legend);\nfunction TagHistoryMonthlyChart(param) {\n    let { accountLines, tag } = param;\n    _s();\n    const [chartOption, setChartOption] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        responsive: true,\n        animation: {},\n        scales: {},\n        plugins: {}\n    });\n    const [chartData, setChartData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        labels: [],\n        datasets: []\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let datasets = [];\n        const taggedLines = tag === \"\" ? accountLines : accountLines.filter((line)=>line.tags.indexOf(tag) !== -1);\n        const groupByTag = (0,_Data_Bank__WEBPACK_IMPORTED_MODULE_3__.aggregateByTags)(taggedLines, -1, tag);\n        const tags = Object.keys(groupByTag);\n        const groupByDate = (0,_Data_Bank__WEBPACK_IMPORTED_MODULE_3__.aggregateByDate)(taggedLines, true);\n        const dateLabels = Object.keys(groupByDate).sort((a, b)=>{\n            let dA = new Date(2023, parseInt(a.split(\"/\")[1]) - 1, parseInt(a.split(\"/\")[0]));\n            let dB = new Date(2023, parseInt(b.split(\"/\")[1]) - 1, parseInt(b.split(\"/\")[0]));\n            return dA > dB ? 1 : -1;\n        });\n        // Dataset to cover the tag\n        let tagHistoryDebit = Object.keys(groupByDate).sort((a, b)=>{\n            let dA = new Date(2023, parseInt(a.split(\"/\")[1]) - 1, parseInt(a.split(\"/\")[0]));\n            let dB = new Date(2023, parseInt(b.split(\"/\")[1]) - 1, parseInt(b.split(\"/\")[0]));\n            return dA > dB ? 1 : -1;\n        }).map((date)=>groupByDate[date] ? groupByDate[date].debit : 0);\n        /*\r\n        let dataset: IChartDataset = {\r\n            label: tag || \"Tous\",\r\n            yAxisID: 'y',\r\n            data: tagHistoryDebit,\r\n            backgroundColor: CHART_COLORS[0],\r\n\r\n        };\r\n        datasets.push(dataset);\r\n        */ // Datasets to cover the sub tags\n        const processedTags = [];\n        for(let i = 0; i < tags.length; i++){\n            const subTaggedLines = taggedLines.filter((line)=>line.tags.indexOf(tags[i]) !== -1 && !line.tags.some((t)=>processedTags.includes(t)));\n            const groupSubTagByDate = (0,_Data_Bank__WEBPACK_IMPORTED_MODULE_3__.aggregateByDate)(subTaggedLines, true);\n            let historyDebit = Object.keys(groupByDate).sort((a, b)=>{\n                let dA = new Date(2023, parseInt(a.split(\"/\")[1]) - 1, parseInt(a.split(\"/\")[0]));\n                let dB = new Date(2023, parseInt(b.split(\"/\")[1]) - 1, parseInt(b.split(\"/\")[0]));\n                return dA > dB ? 1 : -1;\n            }).map((date)=>groupSubTagByDate[date] ? groupSubTagByDate[date].debit : 0);\n            let dataset = {\n                label: tags[i],\n                yAxisID: \"y\",\n                data: historyDebit,\n                backgroundColor: _ColorBank__WEBPACK_IMPORTED_MODULE_2__.CHART_COLORS[(i + 1) % _ColorBank__WEBPACK_IMPORTED_MODULE_2__.CHART_COLORS.length]\n            };\n            datasets.push(dataset);\n            processedTags.push(tags[i]);\n        }\n        let dataToDisplay = {\n            labels: dateLabels,\n            datasets: datasets\n        };\n        setChartData(dataToDisplay);\n        let options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            animation: {\n                duration: 0\n            },\n            scales: {\n                x: {\n                    beginAtZero: true,\n                    title: {\n                        display: true,\n                        text: \"Date\"\n                    }\n                },\n                y: {\n                    beginAtZero: true,\n                    title: {\n                        display: true,\n                        text: \"Amount\"\n                    }\n                }\n            },\n            plugins: {\n                legend: {\n                    position: \"top\"\n                },\n                title: {\n                    display: true,\n                    text: \"Debit monthly history of \" + (tag || \"Tous\")\n                },\n                datalabels: {\n                    align: \"end\",\n                    anchor: \"end\",\n                    color: \"black\",\n                    display: (context)=>{\n                        const val = context.dataset.data[context.dataIndex];\n                        return val > 0;\n                    },\n                    formatter: (value, context)=>{\n                        return Math.round(value).toString();\n                    },\n                    font: {\n                        weight: \"bold\"\n                    },\n                    padding: 6,\n                    textAlign: \"center\"\n                }\n            }\n        };\n        setChartOption(options);\n    }, [\n        accountLines,\n        tag\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"time-chart-wrapper\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_5__.Bar, {\n            options: chartOption,\n            data: chartData\n        }, void 0, false, {\n            fileName: \"D:\\\\projet\\\\budget-tracker-nextjs\\\\components\\\\Charts\\\\TagMonthlyHistoryChart.tsx\",\n            lineNumber: 178,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\projet\\\\budget-tracker-nextjs\\\\components\\\\Charts\\\\TagMonthlyHistoryChart.tsx\",\n        lineNumber: 177,\n        columnNumber: 9\n    }, this);\n}\n_s(TagHistoryMonthlyChart, \"6CaxhMxXEB4iSHPW/sbEIFO3iIg=\");\n_c = TagHistoryMonthlyChart;\nvar _c;\n$RefreshReg$(_c, \"TagHistoryMonthlyChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Charts/TagMonthlyHistoryChart.tsx\n"));

/***/ })

});